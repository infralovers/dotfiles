open() {
    if ( [ -d "$1" ] || [ -f "$1" ] ) && [ code-server >/dev/null 2>&1 ]; then
        /usr/bin/code-server --reuse-window "$1"
        return
    fi
    /usr/bin/open $@
}

beautify_ansible() {
    export ANSIBLE_STDOUT_CALLBACK=debug
}

terraform_token(){

  if [ -f "$HOME/.terraformrc" ]; then
    awk -F'=' '{if($1~"token"){print $2}}' ~/.terraformrc | sed 's/"//g' | sed 's/^[ \t]*//'
  fi
  if [ -f "$HOME/.terraform.d/credentials.tfrc.json" ]; then
    cat "$HOME/.terraform.d/credentials.tfrc.json" | jq -r '.credentials."app.terraform.io".token'
  fi
}

env_ini() {
  filename=$1
  section=$2
  rawdata=$(python3 -c "from sys import argv;import configparser;c = configparser.ConfigParser();c.read(argv[1]); print([f'{x.upper()}={c[argv[2]][x]}' for x in c[argv[2]]])" $filename $section)
  all_properties=($(echo "$rawdata" | yq '.[]'))
  for property in "${all_properties[@]}"; do
     echo $property | sed s'/"//g' | awk -F'=' '{print "export "$1"="$2}'
  done
}


replace_variables() {

  SCRIPT_DIR=${1:-${PWD}}

  if [ ! -d "$SCRIPT_DIR" ]; then
    echo "$SCRIPT_DIR is not a directory"
    return
  fi

  # Replace <ENV-USER-ID>
  find "${SCRIPT_DIR}" -type f -exec sed -i -e "s/<ENV-USER-ID>/$USER_ID/g" {} \;

  # Replace <ENV-ANIMAL>
  find "${SCRIPT_DIR}" -type f -exec sed -i -e "s/<ENV-ANIMAL>/$ANIMAL/g" {} \;

  # Replace <ENV-IP>
  find "${SCRIPT_DIR}" -type f -exec sed -i -e "s/<ENV-IP>/$HOST_IP/g" {} \;

  # Replace <ENV-NAME>
  find "${SCRIPT_DIR}" -type f -exec sed -i -e "s/<ENV-NAME>/$ENVIRONMENT/g" {} \;

  # Replace <ENV-DOMAIN>
  find "${SCRIPT_DIR}" -type f -exec sed -i -e "s/<ENV-DOMAIN>/$DOMAIN/g" {} \;

}
